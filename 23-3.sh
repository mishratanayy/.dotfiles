################################################ Things which should be modified per release
export WORKING_BRANCH=master
export RELEASE=2023-3
BASE_FOLDER=~/builds
BUILD_TYPE='debug' #Available options [debug | optimized]
################################################

############################################### set SCHRODINGER and SCHRODINGER_SRC
export SCHRODINGER_SRC=$BASE_FOLDER/src
export SCHRODINGER=$BASE_FOLDER/$RELEASE
export SCHRODINGER_LIB=$BASE_FOLDER/software/lib 
###############################################

###############################################To get things working
export GIT_SSH=ssh  # This is required on Windows because by default git uses plink.
export SCHRODINGER_BUILD_FROM_SRC=1
#export INTEL_LICENSE_FILE=28518@ns4.schrodinger.com:28518@ns3.schrodinger.com
export WAFCACHE=/tmp/$USER/.wafcache # Useful to keep all temporary files generated by WAF at single place.
export PATH=$QTDIR/bin:$PATH
export LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH
export PATH=$PATH:$SCHRODINGER/utilities
export SCHRODINGER_IFORT_2022_0_BUILD=1

CONSOLE_OPTION=''
if [[ $OSTYPE == "darwin"* ]]; then
   CONSOLE_OPTION='-console'
fi
PREMAKE_OPTION='-g'
if [[ $BUILD_TYPE == "optimized" ]]; then
    PREMAKE_OPTION='-official'
fi

if [[ $OSTYPE == "msys" ]]; then
    alias rbt="winpty rbt"
    export GIT_EDITOR=notepad
fi

###############################################

###############################################
#Change branch of all repositories to current release branch
pushd $PWD
for repository in "$SCHRODINGER_SRC"/*
do
 cd "$repository"
 echo "Changing branch for $repository ..."
 git checkout "$WORKING_BRANCH"
done
popd
###############################################

#Source build environment
. $SCHRODINGER_SRC/mmshare/build_env -b

# Modify terminal output to show git branch.
parse_git_branch() {
 git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
if [[ $OSTYPE == "darwin"* ]] 
then
  setopt PROMPT_SUBST ; PS1='[%n@%m %c $(parse_git_branch) ]\$ '
else
  PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;31m\]$(parse_git_branch)\[\033[00m\]\$ '
fi

pull_all_sources() {
  pushd $PWD
  for repository in "$SCHRODINGER_SRC"/*
  do
    cd "$repository"
    echo "Changing branch for $repository ..."
    git checkout "$WORKING_BRANCH"
    git pull --rebase --autostash
    # Try again in case this is new release branch, it might not be present already.
    git checkout "$WORKING_BRANCH"
  done
  popd
}

build_python(){
  echo "Building python production code..."
  pushd $SCHRODINGER/mmshare-v*/python
  make install
  popd
  echo "Building python tests..."
  pushd $SCHRODINGER/mmshare-v*/python/test
  make install
  popd
}

alias buildinger='$SCHRODINGER_SRC/mmshare/build_tools/buildinger.sh'

alias pmk='$SCHRODINGER_SRC/mmshare/premake $PREMAKE_OPTION'
alias wb='waf configure build install --build=$BUILD_TYPE'
alias wafclean='waf configure clean'
alias waftest='waf configure build install --test'
alias waflist='waf configure list'
alias myclang='clang-format --style=file -i '
alias yapf='yapf -i '
alias mae='$SCHRODINGER/maestro $CONSOLE_OPTION'
alias maes='cd $SCHRODINGER_SRC/maestro-src'
alias mms='cd $SCHRODINGER_SRC/mmshare'
alias mat='$SCHRODINGER/materials $CONSOLE_OPTION'
alias mrun='$SCHRODINGER/run'
alias ff='$SCHRODINGER_SRC/mmshare/build_tools/cpp_format.sh'
alias mmstest='$SCHRODINGER_SRC/mmshare/build_tools/run_maestro_tests.sh'
alias pytest='$SCHRODINGER/utilities/py.test'
alias maetest='$SCHRODINGER/utilities/py.test $SCHRODINGER/maestro-v*/'
alias buildinger='$SCHRODINGER_SRC/mmshare/build_tools/buildinger.sh'
alias sshbolt='ssh $USER@boltsub3.schrodinger.com'
alias post='rbt post --tracking-branch=$WORKING_BRANCH'
alias land='rbt land --dest=$WORKING_BRANCH --edit --squash'
alias sshlinux='ssh 172.22.46.74'

format() {
    myclang $(git diff --name-only '*.cpp|*.h|*.cxx|.hpp')
}

ticket()
{
  current_branch=$(parse_git_branch)
  current_branch=${current_branch:1:-1}
  if [[ "$current_branch" == "$WORKING_BRANCH" ]]; then
    echo "You are on $WORKING_BRANCH branch. Please checkout to your ticket branch."
    return
  fi
  open "https://jira.schrodinger.com/browse/$current_branch"
}


